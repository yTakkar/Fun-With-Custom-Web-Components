{"version":3,"sources":["countryInfo.js","index.js"],"names":["CountryInfo","_country","_countryInfo","attachShadow","mode","HTMLElement","name","oldValue","newValue","console","log","getCountryInfo","fetch","then","resp","json","createTemplate","catch","err","error","area","alpha3Code","altSpellings","borders","callingCodes","capital","nativeName","population","region","subregion","demonym","timezones","topLevelDomain","latlng","translations","flag","currencies","info","Object","keys","map","elem","sp","trim","template","shadowRoot","innerHTML","tagName","val","customElements","define","button","document","querySelector","input","customElement","value","getAttribute","addEventListener","get","setAttribute","toLowerCase"],"mappings":"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","file":"web-components.5a70ff6e.map","sourceRoot":"..","sourcesContent":["class CountryInfo extends HTMLElement {\n  constructor() {\n    super()\n    this._country = ''\n    this._countryInfo = {}\n    \n    let shadowRoot = this.attachShadow({ mode: 'open' })\n  }\n\n  static get observedAttributes() {\n    return ['country']\n  }\n\n  get country() {\n    return this._country\n  }\n\n  set country(val) {\n    this._country = val\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    console.log('attributeChangedCallback >>', name, oldValue, newValue)\n    switch(name) {\n      case 'country': {\n        this._country = newValue\n        oldValue !== newValue && this.getCountryInfo()\n      }\n    }\n  }\n\n  getCountryInfo() {\n    fetch(`https://restcountries.eu/rest/v2/name/${this._country}?fullText=true`)\n      .then(resp => resp.json())\n      .then(resp => {\n        this._countryInfo = resp[0]\n        this.createTemplate()\n      })\n      .catch(err => console.error(err))\n  }\n\n  createTemplate() {\n    const {\n      name,\n      area,\n      alpha3Code,\n      altSpellings,\n      borders,\n      callingCodes,\n      capital,\n      nativeName,\n      population,\n      region,\n      subregion,\n      demonym,\n      timezones,\n      topLevelDomain,\n      latlng,\n      translations,\n      flag,\n      currencies\n    } = this._countryInfo\n\n    const info = `\n      <img src=${flag} width='300px' />\n\n      <p><b>Name</b>: ${name}</p>\n      <p><b>Area</b>: ${area}</p>\n      <p><b>Alpha3 Code</b>: ${alpha3Code}</p>\n      <p><b>Alt Spellings: </b></p>\n      <p><b>Capital</b>: ${capital}</p>\n      <p><b>Native Name</b>: ${nativeName}</p>\n      <p><b>Population</b>: ${population}</p>\n      <p><b>Region</b>: ${region}</p>\n      <p><b>SubRegion</b>: ${subregion}</p>\n      <p><b>Demonym</b>: ${demonym}</p>\n      <p><b>Latitude</b>: ${latlng[0]}</p>\n      <p><b>Longitude</b>: ${latlng[1]}</p>\n\n      <p><b>Currencies</b>:</p>\n      <ul>\n        ${Object.keys(currencies[0]).map(elem => \n          `<li>${elem}: ${currencies[0][elem]}</li>`\n        )}\n      </ul>      \n\n      <p><b>Alt Spellings</b>:</p>\n      <ul>\n        ${altSpellings.map(elem => `<li>${elem}</li>`)}\n      </ul>\n\n      <p><b>Borders</b>:</p>\n      <ul>\n        ${borders.map(elem => `<li>${elem}</li>`)}\n      </ul>\n\n      <p><b>Calling Codes</b>:</p>\n      <ul>\n        ${callingCodes.map(sp => `<li>${sp.trim()}</li>`)}\n      </ul>\n\n      <p><b>Timezones</b>:</p>\n      <ul>\n        ${timezones.map(elem => `<li>${elem}</li>`)}\n      </ul>\n\n      <p><b>Top Level Domains</b>:</p>\n      <ul>\n        ${topLevelDomain.map(sp => `<li>${sp.trim()}</li>`)}\n      </ul>\n\n     <p><b>Translations</b>:</p>\n      <ul>\n        ${Object.keys(translations).map(sp => `<li>${sp}: ${translations[sp]}</li>`)}\n      </ul>\n    `\n\n    const template = `\n      <h1>COUNTRY INFO:</h1>\n      ${info}\n    `\n\n    this.shadowRoot.innerHTML = template\n  }\n\n  connectedCallback() {\n    console.log(`${this.tagName} mounted from the DOM`)\n  }\n\n  disconnectedCallback() {\n    console.log(`${this.tagName} unmounted from the DOM`)\n  }\n}\n\n// DEFINE OUR CUSTOM ELEMENT\ncustomElements.define('country-info', CountryInfo)\n\n// CHANGE COUNTRY-INFO'S COUNTRY PROP\nconst button = document.querySelector('button')\nconst input = document.querySelector('input[type=\"text\"]')\nconst customElement = document.querySelector('country-info')\n\ninput.value = customElement.getAttribute('country')\n\nbutton.addEventListener('click', function() {\n  const value = input.value\n  if (value && customElements.get('country-info')) {\n    customElement.setAttribute('country', value.toLowerCase())\n  }\n})\n","// import './shadowElement'\n// import './template'\n\nimport './countryInfo'\n"]}