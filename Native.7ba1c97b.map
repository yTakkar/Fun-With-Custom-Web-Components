{"version":3,"sources":["Native/customButton.js","Native/myInfo.js","Native/countryInfo.js","Native/index.js"],"names":["CustomButton","addEventListener","callBack","e","console","log","getAttribute","HTMLButtonElement","customElements","define","extends","MyInfo","shadowElement","attachShadow","mode","render","value","split","map","charAt","toUpperCase","substr","join","template","capitalize","shadowRoot","innerHTML","HTMLElement","CountryInfo","_country","_countryInfo","name","oldValue","newValue","getCountryInfo","fetch","then","resp","json","catch","err","error","area","alpha3Code","altSpellings","borders","callingCodes","capital","nativeName","population","region","subregion","demonym","timezones","topLevelDomain","latlng","translations","flag","currencies","info","Object","keys","elem","sp","trim","tagName","button","document","querySelector","input","customElement","get","setAttribute","toLowerCase"],"mappings":"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","file":"Native.7ba1c97b.map","sourceRoot":"..","sourcesContent":["class CustomButton extends HTMLButtonElement {\n  constructor() {\n    super()\n    this.addEventListener('click', this.callBack)\n  }\n\n  callBack(e) {\n    console.log(`${this.getAttribute('is')} called`)\n  }\n}\n\ncustomElements.define('custom-button', CustomButton, { extends: 'button' })","class MyInfo extends HTMLElement {\n  constructor() {\n    super()\n    this.shadowElement = this.attachShadow({ mode: 'open' })\n  }\n\n  connectedCallback() {\n    this.render()\n  }\n\n  capitalize() {\n    const value = this.getAttribute('name');\n    return value.split(' ').map(e => e.charAt(0).toUpperCase() + e.substr(1)).join(' ')\n  }\n\n  render() {\n    const template = `\n      <span>${this.capitalize()}</span>\n    `\n    this.shadowRoot.innerHTML = template\n  }\n}\n\ncustomElements.define('my-info', MyInfo)\n","class CountryInfo extends HTMLElement {\n  constructor() {\n    super()\n    this._country = this.getAttribute('country')\n    this._countryInfo = {}\n    this.shadowRoot = this.attachShadow({ mode: 'open' })\n  }\n\n  static get observedAttributes() {\n    return ['country']\n  }\n\n  attributeChangedCallback(name, oldValue, newValue) {\n    console.log('attributeChangedCallback >>', name, oldValue, newValue)\n    switch(name) {\n      case 'country': {\n        this._country = newValue\n        oldValue !== newValue && this.getCountryInfo()\n      }\n    }\n  }\n\n  getCountryInfo() {\n    fetch(`https://restcountries.eu/rest/v2/name/${this._country}?fullText=true`)\n      .then(resp => resp.json())\n      .then(resp => {\n        this._countryInfo = resp[0]\n        this.render()\n      })\n      .catch(err => console.error(err))\n  }\n\n  render() {\n    const {\n      name,\n      area,\n      alpha3Code,\n      altSpellings,\n      borders,\n      callingCodes,\n      capital,\n      nativeName,\n      population,\n      region,\n      subregion,\n      demonym,\n      timezones,\n      topLevelDomain,\n      latlng,\n      translations,\n      flag,\n      currencies\n    } = this._countryInfo\n\n    const info = `\n      <img src=${flag} width='300px' />\n\n      <p><b>Name</b>: ${name}</p>\n      <p><b>Area</b>: ${area}</p>\n      <p><b>Alpha3 Code</b>: ${alpha3Code}</p>\n      <p><b>Alt Spellings: </b></p>\n      <p><b>Capital</b>: ${capital}</p>\n      <p><b>Native Name</b>: ${nativeName}</p>\n      <p><b>Population</b>: ${population}</p>\n      <p><b>Region</b>: ${region}</p>\n      <p><b>SubRegion</b>: ${subregion}</p>\n      <p><b>Demonym</b>: ${demonym}</p>\n      <p><b>Latitude</b>: ${latlng[0]}</p>\n      <p><b>Longitude</b>: ${latlng[1]}</p>\n\n      <p><b>Currencies</b>:</p>\n      <ul>\n        ${Object.keys(currencies[0]).map(elem => \n          `<li>${elem}: ${currencies[0][elem]}</li>`\n        )}\n      </ul>      \n\n      <p><b>Alt Spellings</b>:</p>\n      <ul>\n        ${altSpellings.map(elem => `<li>${elem}</li>`)}\n      </ul>\n\n      <p><b>Borders</b>:</p>\n      <ul>\n        ${borders.map(elem => `<li>${elem}</li>`)}\n      </ul>\n\n      <p><b>Calling Codes</b>:</p>\n      <ul>\n        ${callingCodes.map(sp => `<li>${sp.trim()}</li>`)}\n      </ul>\n\n      <p><b>Timezones</b>:</p>\n      <ul>\n        ${timezones.map(elem => `<li>${elem}</li>`)}\n      </ul>\n\n      <p><b>Top Level Domains</b>:</p>\n      <ul>\n        ${topLevelDomain.map(sp => `<li>${sp.trim()}</li>`)}\n      </ul>\n\n     <p><b>Translations</b>:</p>\n      <ul>\n        ${Object.keys(translations).map(sp => `<li>${sp}: ${translations[sp]}</li>`)}\n      </ul>\n    `\n\n    const template = `\n      <h1>COUNTRY INFO:</h1>\n      ${info}\n    `\n\n    this.shadowRoot.innerHTML = template\n  }\n\n  connectedCallback() {\n    console.log(`${this.tagName} mounted into the DOM`)\n  }\n\n  disconnectedCallback() {\n    console.log(`${this.tagName} unmounted from the DOM`)\n  }\n}\n\n// DEFINE OUR CUSTOM ELEMENT\ncustomElements.define('country-info', CountryInfo)\n\n// CHANGE COUNTRY-INFO'S COUNTRY PROP\nconst button = document.querySelector('button#get-details')\nconst input = document.querySelector('input[type=\"text\"]')\nconst customElement = document.querySelector('country-info')\n\ninput.value = customElement.getAttribute('country')\n\nbutton.addEventListener('click', function() {\n  const value = input.value\n  if (value && customElements.get('country-info')) {\n    customElement.setAttribute('country', value.toLowerCase())\n  }\n})\n","// import './shadowElement'\n// import './template'\nimport './customButton'\nimport './myInfo'\nimport './countryInfo'\n"]}